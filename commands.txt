# Exact Commands (replace ygautom if needed)

# --- Git ---
git init
git remote add origin https://github.com/<your-username>/time-travel-ygautom.git

# Initial commit
git checkout -b main
echo "# placeholder" > placeholder.txt
git add .
git commit -m "chore: initial repo setup"

# Create structure & files
# (Already generated by this package; if recreating, run:)
# mkdir -p zine
# touch README.md .gitignore LICENSE CODE_OF_CONDUCT.md zine/intro.md RELEASE_NOTES.md GIT_JOURNAL.md

git add .
git commit -m "feat: add zine skeleton, license, and conduct" -m "Sets up README, .gitignore, LICENSE, CODE_OF_CONDUCT, and intro.md."

# Branches for roles
git branch author/idea-sprint
git branch editor/review

# Issues (create on GitHub UI): Layout (#1), Content (#2), Polish (#3)

# Feature branches and PRs (example for Layout)
git checkout -b feat/layout
# edit files...
git add .
git commit -m "feat(layout): initial layout ideas" -m "References #1; adds headings and structure."
git push -u origin feat/layout
# open PR to main with "Closes #1"

# Repeat for Content & Polish branches referencing #2 and #3.

# Create and resolve a merge conflict
git checkout author/idea-sprint
# edit zine/intro.md line 2 differently and commit
git commit -am "feat(author): tweak intro wording"
git checkout editor/review
# edit the same lines differently and commit
git commit -am "feat(editor): refine intro style"
git checkout main
git merge author/idea-sprint
git merge editor/review  # will produce conflict
# resolve conflict in zine/intro.md, then:
git add zine/intro.md
git commit -m "fix: resolve merge conflict in intro"

# Tags
git tag v0.1
git tag -a v1.0 -m "First stable release of the zine"
git push --tags

# --- Maven ---
mvn -v
mvn archetype:generate -DgroupId=edu.asu.ygautom -DartifactId=ygautom-Maven-Practice -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false
cd ygautom-Maven-Practice
mvn compile
mvn test
mvn clean
mvn package

# Change artifactId/version in pom.xml, then:
mvn package

# Add an external dependency in pom.xml and rebuild:
mvn package

# --- Graphviz ---
dot -V
dot -Tpng graphviz/test.dot -o graphviz/test.png
